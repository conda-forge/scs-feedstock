{% set version = "3.2.4.post1" %}

package:
  name: scs
  version: {{ version }}

source:
  - url: https://github.com/bodono/scs-python/archive/refs/tags/{{ version }}.tar.gz
    sha256: bb509507d857906eb95d17d5824138e48e7c75d1a692d0aa7256d899c7e703c5
    patches:
      # backport https://github.com/bodono/scs-python/pull/84
      - patches/0001-Add-support-for-MKL-pardiso-in-meson-build.-84.patch
  # include submodule (not in github tarball due to dear-github/dear-github#214)
  - git_url: https://github.com/cvxgrp/scs.git
    git_rev: 9024b8ccc1bba6ee797440fb22354cadb9c81839
    folder: scs_source

build:
  number: 3
  string: mkl_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}        # [blas_impl == "mkl"]
  string: default_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}    # [blas_impl != "mkl"]
  script:
    # Copy cross-compile meson file hack from scipy feedstock:
    # See https://github.com/conda-forge/scipy-feedstock/blob/9401aa4ee5d9a22c2c9d219e5fb6dbd580f30207/recipe/build.sh#L10
    - echo "python = '${PREFIX}/bin/python'" >> ${CONDA_PREFIX}/meson_cross_file.txt          # [build_platform != target_platform]
    # Copy cross-compile Meson args filtering from numpy/scipy/pandas feedstocks
    # See https://github.com/conda-forge/scipy-feedstock/blob/9401aa4ee5d9a22c2c9d219e5fb6dbd580f30207/recipe/build.sh#L14
    - MESON_ARGS="-Dlink_mkl=true ${MESON_ARGS}"                                              # [unix and blas_impl == "mkl"]
    - MESON_ARGS_REDUCED="$(echo $MESON_ARGS | sed 's/--buildtype release //g')"              # [unix]
    - {{ PYTHON }} -m pip install . -vv -Csetup-args=${MESON_ARGS_REDUCED// / -Csetup-args=}  # [unix]
    - {{ PYTHON }} -m pip install . -vv -Csetup-args=-Dlink_mkl=true                          # [win and blas_impl == "mkl"]
    - {{ PYTHON }} -m pip install . -vv                                                       # [win and blas_impl != "mkl"]

requirements:
  build:
    - libblas 3.9.* *{{ blas_impl }}         # [build_platform != target_platform]
    - liblapack 3.9.* *{{ blas_impl }}       # [build_platform != target_platform]
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    - meson-python                           # [build_platform != target_platform]
    - pkg-config
    - {{ compiler('c') }}
    - {{ stdlib('c') }}
  host:
    - libblas 3.9.* *{{ blas_impl }}
    - liblapack 3.9.* *{{ blas_impl }}
    - mkl-devel                              # [blas_impl == "mkl"]
    - python
    - meson-python
    - pip
    - numpy
  run:
    - python
    - {{ pin_compatible('numpy') }}
    - scipy >=0.13.2
    - libblas * *{{ blas_impl }}             # [blas_impl == "mkl"]
    - liblapack * *{{ blas_impl }}           # [blas_impl == "mkl"]
  run_constrained:
    # avoid installing incompatible cvxpy
    - cvxpy >1.1.15

test:
  imports:
    - scs
    - _scs_direct
    - _scs_indirect
    - _scs_mkl   # [blas_impl == "mkl"]
  requires:
    - pytest
  source_files:
    - test/
  commands:
    - pytest test/ -v  # [not ppc64le]
    # NOTE: test suite is skipped on ppc due to bugs in QEMU code that cause
    # CI to fail, even though the tests should run through on native hardware

about:
  home: https://github.com/bodono/scs-python
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: Python interface for SCS, which solves convex cone problems
  description: |
    Solves convex cone programs via operator splitting.
    Can solve: linear programs (LPs), second-order cone programs (SOCPs),
    semidefinite programs (SDPs), exponential cone programs (ECPs),
    and power cone programs (PCPs), or problems with any combination of
    those cones.
  dev_url: https://github.com/bodono/scs-python

extra:
  recipe-maintainers:
    - djsutherland
    - h-vetinari
    - wshanks
